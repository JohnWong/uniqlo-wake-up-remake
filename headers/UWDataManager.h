/* Generated by RuntimeBrowser
   Image: /var/containers/Bundle/Application/A77617CC-81F8-4D57-BCE6-77E8D969EEA1/UniqloWakeUp.app/UniqloWakeUp
 */

@interface UWDataManager : NSObject {
    bool  _didShowSleepingTimeShort;
    NSDate * _sleepStartDay;
    NSDate * _sleepStartSunday;
}

@property (getter=SNSType, setter=setSNSType:, nonatomic, readwrite) int SNSType;
@property (getter=alarmList, setter=setAlarmList:, nonatomic, readwrite, retain) NSArray *alarmList;
@property (nonatomic, readwrite) bool didShowSleepingTimeShort;
@property (getter=identifier, setter=setIdentifier:, nonatomic, readwrite, retain) NSString *identifier;
@property (getter=localeID, nonatomic, readonly) NSString *localeID;
@property (getter=location, setter=setLocation:, nonatomic, readwrite, retain) NSDictionary *location;
@property (getter=news, setter=setNews:, nonatomic, readwrite, retain) NSDictionary *news;
@property (getter=reservedAlarm, setter=setReservedAlarm:, nonatomic, readwrite, retain) NSDictionary *reservedAlarm;
@property (getter=showsHowToUse, setter=setShowsHowToUse:, nonatomic, readwrite) bool showsHowToUse;
@property (getter=showsWelcome, setter=setShowsWelcome:, nonatomic, readwrite) bool showsWelcome;
@property (nonatomic, readwrite, retain) NSDate *sleepStartDay;
@property (nonatomic, readwrite, retain) NSDate *sleepStartSunday;
@property (getter=temperature, setter=setTemperature:, nonatomic, readwrite, retain) NSDictionary *temperature;
@property (getter=temperatureUnit, setter=setTemperatureUnit:, nonatomic, readwrite) int temperatureUnit;
@property (getter=useAlwaysShareWakeup, setter=setUseAlwaysShareWakeup:, nonatomic, readwrite) bool useAlwaysShareWakeup;
@property (getter=vocalType, setter=setVocalType:, nonatomic, readwrite) int vocalType;
@property (getter=weather, setter=setWeather:, nonatomic, readwrite) int weather;

+ (id)SNSTypeNames;
+ (id)SNSURLs;
+ (id)locationDisplayNameFromLocation:(id)arg1;
+ (id)sharedManager;
+ (id)temperatureDescriptionWithTemp:(int)arg1 lowtemp:(int)arg2;
+ (id)temperatureUnitNames;
+ (id)timeDescriptionWithHour:(int)arg1 minute:(int)arg2;
+ (id)weatherDescription:(int)arg1;

- (void).cxx_destruct;
- (int)SNSType;
- (id)SNSTypeName;
- (id)SNSTypeNameWithType:(int)arg1;
- (void)addSleepMinutes:(long long)arg1 year:(long long)arg2 month:(long long)arg3 day:(long long)arg4;
- (id)alarmList;
- (struct CGPoint { double x1; double x2; })coordinateWithCountry:(id)arg1 state:(id)arg2 city:(id)arg3;
- (bool)didShowSleepingTimeShort;
- (id)flagObjectForKey:(id)arg1;
- (id)identifier;
- (id)init;
- (id)loadSleepLogsWithYear:(long long)arg1;
- (id)localeID;
- (id)location;
- (id)locationTitlesWithCountry:(id)arg1 state:(id)arg2;
- (bool)needsRequestNews;
- (id)news;
- (int)newsID;
- (id)newsURL;
- (id)reservedAlarm;
- (void)saveSleepLogs:(id)arg1 year:(long long)arg2;
- (void)setAlarmList:(id)arg1;
- (void)setDidShowSleepingTimeShort:(bool)arg1;
- (void)setFlagObject:(id)arg1 forKey:(id)arg2;
- (void)setIdentifier:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setNews:(id)arg1;
- (void)setReservedAlarm:(id)arg1;
- (void)setSNSType:(int)arg1;
- (void)setShowsHowToUse:(bool)arg1;
- (void)setShowsWelcome:(bool)arg1;
- (void)setSleepStartDay:(id)arg1;
- (void)setSleepStartSunday:(id)arg1;
- (void)setTemperature:(id)arg1;
- (void)setTemperatureUnit:(int)arg1;
- (void)setUseAlwaysShareWakeup:(bool)arg1;
- (void)setVocalType:(int)arg1;
- (void)setWeather:(int)arg1;
- (bool)showsHowToUse;
- (bool)showsWelcome;
- (float)sleepAverageHours;
- (long long)sleepAverageMinutes;
- (int)sleepLogPageCountWithMode:(int)arg1;
- (id)sleepLogsWithMode:(int)arg1 page:(long long)arg2;
- (long long)sleepMinutesWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3;
- (id)sleepStartDay;
- (id)sleepStartSunday;
- (void)synchronize;
- (id)temperature;
- (int)temperatureHigh;
- (int)temperatureLow;
- (int)temperatureUnit;
- (id)temperatureUnitName;
- (void)updateSleepStartDayWithLogs:(id)arg1;
- (bool)useAlwaysShareWakeup;
- (int)vocalType;
- (int)weather;

@end
