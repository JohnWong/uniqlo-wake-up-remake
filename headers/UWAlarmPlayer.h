/* Generated by RuntimeBrowser
   Image: /var/containers/Bundle/Application/A77617CC-81F8-4D57-BCE6-77E8D969EEA1/UniqloWakeUp.app/UniqloWakeUp
 */

@interface UWAlarmPlayer : NSObject <AVAudioPlayerDelegate, AVAudioSessionDelegate> {
    int  _currentAmpm;
    int  _currentGreet;
    int  _currentHour;
    NSDictionary * _currentInfo;
    int  _currentMinute;
    int  _currentWeek;
    NSArray * _infoList;
    bool  _interrupted;
    bool  _isPlaying;
    bool  _isWaiting;
    NSString * _musicName;
    AVAudioPlayer * _musicPlayer;
    NSTimer * _oberveTimer;
    int  _voiceIndex;
    NSMutableArray * _voicePlayers;
    NSArray * _voiceTimes;
    int  _weather;
}

@property (nonatomic, readwrite) int currentAmpm;
@property (nonatomic, readwrite) int currentGreet;
@property (nonatomic, readwrite) int currentHour;
@property (nonatomic, readwrite, retain) NSDictionary *currentInfo;
@property (nonatomic, readwrite) int currentMinute;
@property (nonatomic, readwrite) int currentWeek;
@property (atomic, readonly, copy) NSString *debugDescription;
@property (atomic, readonly, copy) NSString *description;
@property (atomic, readonly) unsigned long long hash;
@property (nonatomic, readwrite, retain) NSArray *infoList;
@property (nonatomic, readwrite) bool interrupted;
@property (nonatomic, readwrite) bool isPlaying;
@property (nonatomic, readwrite) bool isWaiting;
@property (nonatomic, readwrite, retain) NSString *musicName;
@property (nonatomic, readwrite, retain) AVAudioPlayer *musicPlayer;
@property (nonatomic, readwrite) NSTimer *oberveTimer;
@property (atomic, readonly) Class superclass;
@property (nonatomic, readwrite) int voiceIndex;
@property (nonatomic, readwrite, retain) NSMutableArray *voicePlayers;
@property (nonatomic, readwrite, retain) NSArray *voiceTimes;
@property (nonatomic, readwrite) int weather;

+ (id)sharedPlayer;

- (void).cxx_destruct;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(bool)arg2;
- (void)audioSessionDidInterrupt:(id)arg1;
- (void)beginInterruption;
- (int)currentAmpm;
- (int)currentGreet;
- (int)currentHour;
- (id)currentInfo;
- (int)currentMinute;
- (int)currentWeek;
- (void)endInterruptionWithFlags:(unsigned long long)arg1;
- (id)infoList;
- (id)init;
- (bool)interrupted;
- (bool)isPlaying;
- (bool)isWaiting;
- (id)musicName;
- (id)musicPlayer;
- (id)oberveTimer;
- (void)observeMusic;
- (void)play;
- (void)prepareMusicObserver;
- (void)setCurrentAmpm:(int)arg1;
- (void)setCurrentGreet:(int)arg1;
- (void)setCurrentHour:(int)arg1;
- (void)setCurrentInfo:(id)arg1;
- (void)setCurrentMinute:(int)arg1;
- (void)setCurrentWeek:(int)arg1;
- (void)setInfoList:(id)arg1;
- (void)setInterrupted:(bool)arg1;
- (void)setIsPlaying:(bool)arg1;
- (void)setIsWaiting:(bool)arg1;
- (void)setMusicName:(id)arg1;
- (void)setMusicPlayer:(id)arg1;
- (void)setOberveTimer:(id)arg1;
- (void)setShowsNowPlayingInfo:(bool)arg1;
- (void)setVoiceIndex:(int)arg1;
- (void)setVoicePlayers:(id)arg1;
- (void)setVoiceTimes:(id)arg1;
- (void)setWeather:(int)arg1;
- (void)setupTime;
- (void)stop;
- (void)updateNowPlayingInfo;
- (int)voiceIndex;
- (id)voicePlayers;
- (id)voiceTimes;
- (int)weather;

@end
